[package]
name = "proxide"
version = "0.1.0"
edition = "2021"
authors = ["Ramiro Aisen <ramiroaisen@gmail.com>"]

[lib]
name = "proxide"
path = "src/lib/mod.rs"

[[bin]]
name = "proxide"
path = "src/bin/proxide.rs"

[features]
default = ["full"]
full = [
  # "proctitle",
  # "aws_lc_rs",
  "log-info",
  "jemalloc",
  "primary-log",
  "access-log",
  "client-log",
  "interpolation",
  "compression-all-algos",
  "serve-static",
  "h3-quinn",
  # "stats",
]
serve-static = []
stats = []
human-panic = ["dep:human-panic"]
proctitle = ["dep:proctitle"]
compression-all-algos = [ "compression-br", "compression-zstd", "compression-gzip", "compression-deflate" ]
compression-br = [ "async-compression/brotli" ]
compression-zstd = [ "async-compression/zstd" ]
compression-gzip = [ "async-compression/gzip" ]
compression-deflate = [ "async-compression/deflate" ]
jemalloc = [ "dep:jemalloc_pprof", "dep:tikv-jemallocator" ]
interpolation = []
access-log = []
client-log = []
primary-log = []
server-tcp-nodelay = []
tracing = ["tokio/tracing", "dep:console-subscriber"]
log-state = []
log-off = ["log/release_max_level_off"]
log-error = ["log/release_max_level_error"]
log-warn = ["log/release_max_level_warn"]
log-info = ["log/release_max_level_info"]
log-debug = ["log/release_max_level_debug"]
h3-quinn = ["dep:h3", "dep:h3-quinn"]
# h3-msquic = [ "dep:h3" ]
# add aws_lc_rs support for windows
# ring = [ "rustls/ring" ]
# aws_lc_rs = [ "rustls/aws_lc_rs" ]

[dependencies]
# rustls
rustls = { version = "0.23.12", default-features = false, features = [ "std", "tls12", "brotli", "zlib", "ring" ] }   
# we only need hyper-rustls for the .with_native_roots() extension method on the rustls Config builder
hyper-rustls = { version = "0.27.7", default-features = false, features = [ "rustls-native-certs" ] }
tokio-rustls = { version = "0.26.2", default-features = false, features = [] }
rustls-pemfile = "2.2.0"
rustls-pki-types = { version = "1.7.0", features = ["std"] }

# h3
h3 = { version = "0.0.8", optional = true, features = ["i-implement-a-third-party-backend-and-opt-into-breaking-changes", "tracing"] }
h3-quinn = { version = "0.0.10", optional = true } 
quinn = { version = "0.11.8", features = ["ring"] }
# h3-util = { version = "0.0.4", optional = true, default-features = false, features = ["quinn"] }

# http
http = "1.3.1"
http-body = "1.0.1"
http-body-util = "0.1.3"
hyper = { version = "1.6.0", features = ["full"] }
hyper-util = { version = "0.1.6", features = ["full"] }
url = { version = "2.5.4", features = ["serde"] }
mime_guess = "2.0.5"
headers = "0.4.1"

# tokio
tokio = { version = "1.47.1", features = ["full"] }
tokio-util = { version = "0.7.16", features = ["full"] }

# os
socket2 = { version = "0.6.0", features = ["all"] }
nix = { version = "0.30.1", features = ["process", "signal"] }
rlimit = "0.10.2"
proctitle = { version = "0.1.1", optional = true }

# async
futures = "0.3.31"
futures-util = "0.3.30"
async-stream = "0.3.6"
pin-project = "1.1.10"

# log
log = { version = "0.4.27", features = ["std"]} 

# formats
serde = { version = "1.0.219", features = ["derive", "rc"] }
serde_json = { version = "1.0.142", features = ["preserve_order"] }
serde_yaml = "0.9.34"
toml = { version = "0.9.5", features = ["preserve_order"] }
base64 = "0.22.1"

# compression
async-compression = { version = "0.4.27", features = ["tokio"], optional = true }

# primitives
anyhow = "1.0.98"
thiserror = "2.0.12"
nonzero = "0.2.0"
unwrap-infallible = "0.1.5"
defer = "0.2.1"
const-str = "0.6.4"
static_init = "1.0.4"
parking_lot = { version = "0.12.4", features = ["arc_lock", "send_guard"] }
rand = "0.9.2"
once_cell = { version = "1.21.3", features = ["parking_lot"] }
bytes = "1.10.1"
indexmap = { version = "2.10.0", features = ["serde"] }
owo-colors = "4.2.2"
humantime = "2.2.0"
kanal = { version = "0.1.1", default-features = false, features = ["async"] }
itertools = "0.14.0"
time = { version = "0.3.41", features = ["local-offset"] }
derivative = "2.2.0"
chrono = { version = "0.4.41", default-features = false, features = ["now", "clock"] }
crc32fast = "1.5.0"

# cli
clap = { version = "4.5.43", features = ["derive", "env"] }
human-panic = { version = "2.0.3", optional = true }

# regex
regex = "1.11.1"
regex_static = "0.1.1"

tower = { version = "0.5.2", features = ["util"] }
console-subscriber = { version = "0.4.1", optional = true }
schemars = { version = "0.8.21", features = ["url", "derive", "preserve_order", "indexmap2"] }
proxy-header = "0.1.2"
gcd = "2.3.0"
derive_more = { version = "2.0.1", features = ["debug", "default", "from"] }
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
tracing = "0.1.41"

[dev-dependencies]
axum = "0.7.9"
local-ip-address = "0.6.5"
reqwest = { version = "0.12.22", features = ["blocking", "http2", "http3"] }
reqwest-websocket = "0.5.0"
tokio = { version = "1.37.0", features = ["full", "test-util"] }
tungstenite = "0.27.0"
async-tungstenite = { version = "0.30.0", features = ["tokio", "tokio-runtime"] }
tracing = "0.1.41"


[patch.crates-io]
schemars = { path = "./patches/schemars/schemars" }
# h3 ={ path = "./patches/h3" }

# TODO: enable jammalloc in other platforms
[target.'cfg(target_os = "linux")'.dependencies]
jemalloc_pprof = { version = "0.8.1", optional = true }
tikv-jemallocator = { version = "0.6.0", optional = true, features = ["profiling", "unprefixed_malloc_on_supported_platforms"] }

[package.metadata.cargo-all-features]
# Exclude certain features from the build-all-features matrix
# skip_feature_sets = [
#   ["aws_lc_rs", "ring"],
# ]

denylist = [
  "log-off",
  "log-error",
  "log-warn",
  "log-info",
  "log-debug",
  "compression-all-algos",
  "full",
]
