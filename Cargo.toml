[package]
name = "proxide"
version = "0.1.0"
edition = "2021"
authors = ["Ramiro Aisen <ramiroaisen@gmail.com>"]

[lib]
name = "proxide"
path = "src/lib/mod.rs"

[[bin]]
name = "proxide"
path = "src/bin/proxide.rs"

[features]
default = ["full"]
full = [
  # "proctitle",
  "aws_lc_rs",
  "log-info",
  "jemalloc",
  "primary-log",
  "access-log",
  "client-log",
  "interpolation",
  "compression-all-algos",
  # "stats",
]
stats = []
human-panic = ["dep:human-panic"]
proctitle = ["dep:proctitle"]
compression-all-algos = [ "compression-br", "compression-zstd", "compression-gzip", "compression-deflate" ]
compression-br = [ "async-compression/brotli" ]
compression-zstd = [ "async-compression/zstd" ]
compression-gzip = [ "async-compression/gzip" ]
compression-deflate = [ "async-compression/deflate" ]
jemalloc = [ "dep:jemalloc_pprof", "dep:tikv-jemallocator" ]
interpolation = []
access-log = []
client-log = []
primary-log = []
server-tcp-nodelay = []
tracing = ["tokio/tracing", "dep:console-subscriber"]
log-state = []
log-off = ["log/release_max_level_off"]
log-error = ["log/release_max_level_error"]
log-warn = ["log/release_max_level_warn"]
log-info = ["log/release_max_level_info"]
log-debug = ["log/release_max_level_debug"]
ring = [ "rustls/ring" ]
aws_lc_rs = [ "rustls/aws_lc_rs" ]

[dependencies]
rustls = { version = "0.23.12", default-features = false, features = [ "std",  "aws_lc_rs", "tls12", "brotli", "zlib" ] }   
# we only need hyper-rustls for the .with_native_roots() extension method on the rustls Config builder
hyper-rustls = { version = "0.27.1", default-features = false, features = [ "rustls-native-certs" ] }
tokio-rustls = { version = "0.26.0", default-features = false, features = [] }
rustls-pemfile = "2.1.2"
anyhow = "1.0.86"
async-stream = "0.3.5"
bytes = "1.6.0"
futures = "0.3.30"
http-body = "1.0.0"
http-body-util = "0.1.1"
hyper = { version = "1.4.1", features = ["full"] }
hyper-util = { version = "0.1.6", features = ["full"] }
indexmap = { version = "2.2.6", features = ["serde"] }
log = { version = "0.4.21", features = ["std"]} 
once_cell = { version = "1.19.0", features = ["parking_lot"] }
pin-project = "1.1.5"
rand = "0.8.5"
regex = "1.10.4"
regex_static = "0.1.1"
serde = { version = "1.0.203", features = ["derive", "rc"] }
serde_json = { version = "1.0.117", features = ["preserve_order"] }
thiserror = "1.0.61"
tokio = { version = "1.37.0", features = ["full"] }
tokio-util = { version = "0.7.11", features = ["full"] }
toml = { version = "0.8.13", features = ["preserve_order"] }
url = { version = "2.5.0", features = ["serde"] }
tower = "0.4.13"
parking_lot = { version = "0.12.3", features = ["arc_lock", "send_guard"] }
derivative = "2.2.0"
static_init = "1.0.3"
time = { version = "0.3.36", features = ["local-offset"] }
owo-colors = "4.0.0"
kanal = { version = "0.1.0-pre8", default-features = false, features = ["async"] }
humantime = "2.1.0"
serde_yaml = "0.9.34"
clap = { version = "4.5.4", features = ["derive", "env"] }
socket2 = "0.5.7"
futures-util = "0.3.30"
http = "1.1.0"
itertools = "0.13.0"
console-subscriber = { version = "0.3.0", optional = true }
chrono = { version = "0.4.38", default-features = false, features = ["now", "clock"] }
async-compression = { version = "0.4.10", features = ["tokio"], optional = true }
proctitle = { version = "0.1.1", optional = true }
human-panic = { version = "2.0.0", optional = true }
rlimit = "0.10.1"
schemars = { version = "0.8.21", features = ["url", "derive", "preserve_order", "indexmap2"] }
base64 = "0.22.1"
defer = "0.2.1"
proxy-header = "0.1.2"
nix = { version = "0.29.0", features = ["process", "signal"] }
rustls-pki-types = { version = "1.7.0", features = ["std"] }
async-tungstenite = { version = "0.27.0", features = ["tokio", "tokio-runtime"] }
const-str = "0.5.7"
rustls-native-certs = "0.7.1"

[dev-dependencies]
local-ip-address = "0.6.1"
reqwest = { version = "0.12.5", features = ["blocking"] }
reqwest-websocket = "0.4.0"
tokio = { version = "1.37.0", features = ["full", "test-util"] }
tungstenite = "0.23.0"

[patch.crates-io]
schemars = { path = "./patches/schemars/schemars" }
# proxy-header = { path = "./patches/proxy-header" }
# ppp = { path = "./patches/ppp" }

# TODO: enable jammalloc in other platforms
[target.'cfg(target_os = "linux")'.dependencies]
jemalloc_pprof = { version = "0.1.0", optional = true }
tikv-jemallocator = { version = "0.5.4", optional = true, features = ["profiling", "unprefixed_malloc_on_supported_platforms"] }

[package.metadata.cargo-all-features]
# Exclude certain features from the build-all-features matrix
skip_feature_sets = [
  ["aws_lc_rs", "ring"],
]

denylist = [
  "log-off",
  "log-error",
  "log-warn",
  "log-info",
  "log-debug",
  "compression-all-algos",
  "full",
]
